name: CI

# yamllint disable-line rule:truthy
on:
  push:
    branches:
      - dev
      - rc
      - master
  pull_request: ~

env:
  CACHE_VERSION: 1
  DEFAULT_PYTHON: 3.7
  PRE_COMMIT_HOME: ~/.cache/pre-commit

jobs:
  prepare-tests:
    name: Prepare tests for Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]
    container: homeassistant/ci-azure:${{ matrix.python-version }}
    steps:
      - name: Check out code from GitHub
        uses: actions/checkout@v2
      - name:
          Restore full Python ${{ matrix.python-version }} virtual environment
        id: cache-venv
        uses: actions/cache@v2
        with:
          path: venv
          key: >-
            ${{ env.CACHE_VERSION}}-${{ runner.os }}-venv-${{
            matrix.python-version }}-${{ hashFiles('requirements_test.txt')
            }}-${{ hashFiles('requirements_all.txt') }}-${{
            hashFiles('homeassistant/package_constraints.txt') }}
          restore-keys: |
            ${{ env.CACHE_VERSION}}-${{ runner.os }}-venv-${{ matrix.python-version }}-${{ hashFiles('requirements_test.txt') }}-${{ hashFiles('requirements_all.txt') }}
            ${{ env.CACHE_VERSION}}-${{ runner.os }}-venv-${{ matrix.python-version }}-${{ hashFiles('requirements_test.txt') }}
            ${{ env.CACHE_VERSION}}-${{ runner.os }}-venv-${{ matrix.python-version }}-
      - name:
          Create full Python ${{ matrix.python-version }} virtual environment
        if: steps.cache-venv.outputs.cache-hit != 'true'
        run: |
          python -m venv venv
          . venv/bin/activate
          pip install -U "pip<20.3" setuptools wheel
          pip install -r requirements_all.txt
          pip install -r requirements_test.txt
          pip install -e .

  license-check:
    runs-on: ubuntu-latest
    needs: prepare-tests
    strategy:
      matrix:
        python-version: [3.8]
    name: Check dependency licenses - Python ${{ matrix.python-version }}
    container: homeassistant/ci-azure:${{ matrix.python-version }}
    steps:
      - name: Check out code from GitHub
        uses: actions/checkout@v2
      - name:
          Restore full Python ${{ matrix.python-version }} virtual environment
        id: cache-venv
        uses: actions/cache@v2
        with:
          path: venv
          key: >-
            ${{ env.CACHE_VERSION}}-${{ runner.os }}-venv-${{
            matrix.python-version }}-${{ hashFiles('requirements_test.txt')
            }}-${{ hashFiles('requirements_all.txt') }}-${{
            hashFiles('homeassistant/package_constraints.txt') }}
      - name: Fail job if Python cache restore failed
        if: steps.cache-venv.outputs.cache-hit != 'true'
        run: |
          echo "Failed to restore Python virtual environment from cache"
          exit 1
      - name: Install pip-licenses
        run: |
          . venv/bin/activate
          pip install ptable==0.9.2
          pip install git+git://github.com/cdce8p/pip-licenses.git@from-all
      - name: Run pip-licenses [All]
        run: |
          . venv/bin/activate
          pip-licenses --from all --order=License-Metadata
      - name: Run pip-licenses [csv output]
        run: |
          . venv/bin/activate
          pip-licenses \
            --from all \
            --format csv \
            --output-file licenses.csv
      - name: Pip show details
        run: |
          . venv/bin/activate
          pip show numpy
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: license-artifacts
          path: licenses*.csv
          retention-days: 7
